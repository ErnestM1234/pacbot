# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: test.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\ntest.proto\x12\x07\x62otCode\"\xc4\x01\n\x04Test\x12\x0f\n\x07testNum\x18\x01 \x02(\x05\x1aw\n\x11NestedTestMessage\x12\x0c\n\x04int1\x18\x01 \x02(\x05\x12\x0c\n\x04int2\x18\x02 \x02(\x05\x12*\n\tdirection\x18\x03 \x01(\x0e\x32\x17.botCode.Test.Direction\x12\x1a\n\x12\x66rightened_counter\x18\x04 \x01(\x05\"2\n\tDirection\x12\x06\n\x02UP\x10\x00\x12\x08\n\x04\x44OWN\x10\x01\x12\x08\n\x04LEFT\x10\x02\x12\t\n\x05RIGHT\x10\x03')



_TEST = DESCRIPTOR.message_types_by_name['Test']
_TEST_NESTEDTESTMESSAGE = _TEST.nested_types_by_name['NestedTestMessage']
_TEST_DIRECTION = _TEST.enum_types_by_name['Direction']
Test = _reflection.GeneratedProtocolMessageType('Test', (_message.Message,), {

  'NestedTestMessage' : _reflection.GeneratedProtocolMessageType('NestedTestMessage', (_message.Message,), {
    'DESCRIPTOR' : _TEST_NESTEDTESTMESSAGE,
    '__module__' : 'test_pb2'
    # @@protoc_insertion_point(class_scope:botCode.Test.NestedTestMessage)
    })
  ,
  'DESCRIPTOR' : _TEST,
  '__module__' : 'test_pb2'
  # @@protoc_insertion_point(class_scope:botCode.Test)
  })
_sym_db.RegisterMessage(Test)
_sym_db.RegisterMessage(Test.NestedTestMessage)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TEST._serialized_start=24
  _TEST._serialized_end=220
  _TEST_NESTEDTESTMESSAGE._serialized_start=49
  _TEST_NESTEDTESTMESSAGE._serialized_end=168
  _TEST_DIRECTION._serialized_start=170
  _TEST_DIRECTION._serialized_end=220
# @@protoc_insertion_point(module_scope)
