/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: pacmanState.proto */

#ifndef PROTOBUF_C_pacmanState_2eproto__INCLUDED
#define PROTOBUF_C_pacmanState_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _BotCode__PacmanState BotCode__PacmanState;
typedef struct _BotCode__PacmanState__AgentState BotCode__PacmanState__AgentState;


/* --- enums --- */

typedef enum _BotCode__PacmanState__GameMode {
  BOT_CODE__PACMAN_STATE__GAME_MODE__CHASE = 0,
  BOT_CODE__PACMAN_STATE__GAME_MODE__SCATTER = 1,
  BOT_CODE__PACMAN_STATE__GAME_MODE__FRIGHTENED = 2,
  BOT_CODE__PACMAN_STATE__GAME_MODE__PAUSED = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BOT_CODE__PACMAN_STATE__GAME_MODE)
} BotCode__PacmanState__GameMode;
typedef enum _BotCode__PacmanState__GridElement {
  BOT_CODE__PACMAN_STATE__GRID_ELEMENT__WALL = 0,
  BOT_CODE__PACMAN_STATE__GRID_ELEMENT__PELLET = 1,
  BOT_CODE__PACMAN_STATE__GRID_ELEMENT__POWER_PELLET = 2,
  BOT_CODE__PACMAN_STATE__GRID_ELEMENT__EMPTY = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BOT_CODE__PACMAN_STATE__GRID_ELEMENT)
} BotCode__PacmanState__GridElement;
typedef enum _BotCode__PacmanState__Direction {
  BOT_CODE__PACMAN_STATE__DIRECTION__UP = 0,
  BOT_CODE__PACMAN_STATE__DIRECTION__DOWN = 1,
  BOT_CODE__PACMAN_STATE__DIRECTION__LEFT = 2,
  BOT_CODE__PACMAN_STATE__DIRECTION__RIGHT = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(BOT_CODE__PACMAN_STATE__DIRECTION)
} BotCode__PacmanState__Direction;

/* --- messages --- */

struct  _BotCode__PacmanState__AgentState
{
  ProtobufCMessage base;
  int32_t x;
  int32_t y;
  protobuf_c_boolean has_direction;
  BotCode__PacmanState__Direction direction;
  protobuf_c_boolean has_frightened_counter;
  int32_t frightened_counter;
};
#define BOT_CODE__PACMAN_STATE__AGENT_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&bot_code__pacman_state__agent_state__descriptor) \
    , 0, 0, 0, BOT_CODE__PACMAN_STATE__DIRECTION__UP, 0, 0 }


struct  _BotCode__PacmanState
{
  ProtobufCMessage base;
  BotCode__PacmanState__AgentState *pacman;
  BotCode__PacmanState__AgentState *red_ghost;
  BotCode__PacmanState__AgentState *pink_ghost;
  BotCode__PacmanState__AgentState *orange_ghost;
  BotCode__PacmanState__AgentState *blue_ghost;
  BotCode__PacmanState__GameMode mode;
  int32_t frightened_timer;
  int32_t score;
  size_t n_grid;
  BotCode__PacmanState__GridElement *grid;
  int32_t grid_columns;
  int32_t lives;
  int32_t update_ticks;
  int32_t ticks_per_update;
  protobuf_c_boolean has_elapsed_time;
  float elapsed_time;
};
#define BOT_CODE__PACMAN_STATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&bot_code__pacman_state__descriptor) \
    , NULL, NULL, NULL, NULL, NULL, BOT_CODE__PACMAN_STATE__GAME_MODE__CHASE, 0, 0, 0,NULL, 0, 0, 0, 0, 0, 0 }


/* BotCode__PacmanState__AgentState methods */
void   bot_code__pacman_state__agent_state__init
                     (BotCode__PacmanState__AgentState         *message);
/* BotCode__PacmanState methods */
void   bot_code__pacman_state__init
                     (BotCode__PacmanState         *message);
size_t bot_code__pacman_state__get_packed_size
                     (const BotCode__PacmanState   *message);
size_t bot_code__pacman_state__pack
                     (const BotCode__PacmanState   *message,
                      uint8_t             *out);
size_t bot_code__pacman_state__pack_to_buffer
                     (const BotCode__PacmanState   *message,
                      ProtobufCBuffer     *buffer);
BotCode__PacmanState *
       bot_code__pacman_state__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   bot_code__pacman_state__free_unpacked
                     (BotCode__PacmanState *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*BotCode__PacmanState__AgentState_Closure)
                 (const BotCode__PacmanState__AgentState *message,
                  void *closure_data);
typedef void (*BotCode__PacmanState_Closure)
                 (const BotCode__PacmanState *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor bot_code__pacman_state__descriptor;
extern const ProtobufCMessageDescriptor bot_code__pacman_state__agent_state__descriptor;
extern const ProtobufCEnumDescriptor    bot_code__pacman_state__game_mode__descriptor;
extern const ProtobufCEnumDescriptor    bot_code__pacman_state__grid_element__descriptor;
extern const ProtobufCEnumDescriptor    bot_code__pacman_state__direction__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_pacmanState_2eproto__INCLUDED */
